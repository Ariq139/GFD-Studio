namespace GFDLibrary
{
    public sealed class Texture : Resource
    {
        public static byte[] DummyTextureData { get; } =
        {
            0x44, 0x44, 0x53, 0x20, 0x7C, 0x00, 0x00, 0x00, 0x07, 0x10, 0x00, 0x00,
            0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
            0x44, 0x58, 0x54, 0x35, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0xFF, 0xFF,
            0xFF, 0xFF, 0xFF, 0xFF, 0x78, 0xFD, 0x89, 0x25, 0x05, 0x05, 0x50, 0x50,
            0x00, 0x05, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x78, 0xFD, 0x89, 0x25,
            0x05, 0x05, 0x50, 0x50, 0x00, 0x05, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
            0x78, 0xFD, 0x89, 0x25, 0x05, 0x05, 0x50, 0x50, 0x00, 0x05, 0xFF, 0xFF,
            0xFF, 0xFF, 0xFF, 0xFF, 0x78, 0xFD, 0x89, 0x25, 0x05, 0x05, 0x50, 0x50
        };

        public string Name { get; set; }

        public TextureFormat Format { get; set; }

        public byte[] Data { get; set; }

        // 1C
        public byte Field1C { get; set; }

        // 1D
        public byte Field1D { get; set; }

        // 1E
        public byte Field1E { get; set; }

        // 1F
        public byte Field1F { get; set; }

        internal Texture() : base(ResourceType.Texture, PERSONA5_RESOURCE_VERSION)
        {          
        }

        public Texture( string name, TextureFormat format, byte[] data ) : this()
        {
            Name = name;
            Format = format;
            Data = data;
            Field1C = 1;
            Field1D = 1;
            Field1E = 0;
            Field1F = 0;
        }

        public Texture( string name, TextureFormat format, byte[] data, byte field1c, byte field1d, byte field1e, byte field1f ) : this()
        {
            Name = name;
            Format = format;
            Data = data;
            Field1C = field1c;
            Field1D = field1d;
            Field1E = field1e;
            Field1F = field1f;
        }

        public override string ToString()
        {
            return Name;
        }
    }

    public enum TextureFormat : ushort
    {
        Invalid = 0,
        DDS = 1,
    }
}